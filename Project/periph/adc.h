#ifndef PROJECT_PERIPH_ADC_H
#define PROJECT_PERIPH_ADC_H

#include "../../Core/Inc/adc.h"

namespace Project::Periph {

    /// ADC peripheral class. requirements: DMA circular, temperature sensor channel, vref channel
    struct ADC {
        enum {
            INDEX_TEMP = 1, ///< index of internal temperature sensor
            INDEX_VREF = 2, ///< index of voltage reference
            N_CHANNEL = 3,  ///< number of ADC channel(s)
        };

        ADC_HandleTypeDef &hadc; ///< ADC handler generated by cubeMX
        uint32_t buf[N_CHANNEL] = {}; ///< ADC buffer
        constexpr explicit ADC(ADC_HandleTypeDef &hadc) : hadc(hadc) {}

        void init(); ///< ADC DMA circular start
        void deinit(); ///< ADC DMA circular stop
        uint32_t operator[](size_t index); ///< get ADC raw value given the index
        float getTemp(); ///< get internal temperature in celsius
        float getVref(); ///< get voltage reference in volt
    };

    inline ADC adc1 { hadc1 };
    
} // namespace Project


#endif // PROJECT_PERIPH_ADC_H